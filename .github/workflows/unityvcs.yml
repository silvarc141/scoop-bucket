name: Repack Unity VCS files from the installer to an archive

on:
  push:
    branches:
      - master

jobs:
  check:
    runs-on: windows-latest
    outputs:
      status: ${{ steps.check.conclusion }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - id: check
        name: Check if manifest was modified
        run: |
          if($(git diff --name-only HEAD~1 HEAD -- bucket/unityvcs.json) -eq $null)
          {
            exit 0
          }
          else
          {
            exit 1
          }

  repack:
    needs: check
    if: needs.check.outputs.status == 'success'
    runs-on: windows-latest

    steps:
      - name: Download installer
        run: |
          $version = "11.0.16.8622"
          $link = "https://www.plasticscm.com/download/downloadinstaller/$version/plasticscm/windows/full?flags=None"
          (New-Object Net.WebClient).DownloadFile($link, ".\installer.exe")

      - name: Run installer
        run: |
          mkdir -p installed
          .\installer.exe --mode unattended --unattendedmodeui none --prefix "$(pwd)\installed" --debuglevel 4 --debugtrace "(pwd)\log.txt"

          $required = @('client','server','theme','install.properties')

          while($True)
          {
            $items = Get-ChildItem installed | Foreach-Object {$_.name}
            $itemsLeft = ($required.Where{$_ -notin $items})
            if($itemsLeft.Count -eq 0)
            {
              break;
            }

            Write-Output "Items left - $itemsLeft"
            Start-Sleep -Seconds 1
          }

          Write-Host "Installation completed"

      - name: Create artifacts
        run: |
          mkdir -p artifacts
          cp -r .\installed\client artifacts\
          cp -r .\installed\theme artifacts\
          cp -r .\installed\install.properties artifacts\
          Compress-Archive -Path .\artifacts\ -DestinationPath unityvcs-portable.zip

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./unityvcs-portable.zip
          asset_name: unityvcs-portable.zip
          asset_content_type: application/zip
